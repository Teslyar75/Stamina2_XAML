<Window x:Class="Stamina2_XAML.MainWindow"
       xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="MainWindow" Height="450" Width="1050" KeyDown="Window_KeyDown">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
        </Grid.RowDefinitions>


        <Button Margin="3,3,3,3" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="30" >
            <Slider Name="slider" ValueChanged="slider_ValueChanged" Minimum="0" Maximum="10" Width="1000"
        Value="{Binding Path=SequenceLength, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

        </Button>




        <TextBlock x:Name="sequenceDisplay" Margin="3,3,3,3" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="30" FontSize="24">
                <Button>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="10"  Padding="10">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Button>
        </TextBlock>

        <Button Margin="3,3,3,3" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" FontSize="24" Content="~" >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FFEA6E91"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>


        <Button x:Name="button1" Margin="3,3,3,3" Grid.Row="2" Grid.Column="2" Grid.ColumnSpan="2" FontSize="24" Content="1" >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FFEA6E91"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>


        <Button x:Name="button2" Margin="3,3,3,3" Grid.Row="2" Grid.Column="4" Grid.ColumnSpan="2" FontSize="24" Content="2">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FFF0E110"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>



        <Button x:Name="button3" Margin="3,3,3,3" Grid.Row="2" Grid.Column="6" Grid.ColumnSpan="2" FontSize="24" Content="3" >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FF10F013"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>




        <Button x:Name="button4" Margin="3,3,3,3" Grid.Row="2" Grid.Column="8" Grid.ColumnSpan="2" FontSize="24" Content="4"  >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FF19C0E0"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="button5" Margin="3,3,3,3" Grid.Row="2" Grid.Column="10" Grid.ColumnSpan="2" FontSize="24" Content="5"  >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FF19C0E0"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="button6" Margin="3,3,3,3" Grid.Row="2" Grid.Column="12" Grid.ColumnSpan="2" FontSize="24" Content="6"  >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background"  Value="#FF19C0E0"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="button7" Margin="3,3,3,3" Grid.Row="2" Grid.Column="14" Grid.ColumnSpan="2" FontSize="24" Content="7">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FFD710F0"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>



        <Button x:Name="button8" Margin="3,3,3,3" Grid.Row="2" Grid.Column="16" Grid.ColumnSpan="2" FontSize="24" Content="8" >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background"  Value="#FFD710F0"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="button9" Margin="3,3,3,3" Grid.Row="2" Grid.Column="18" Grid.ColumnSpan="2" FontSize="24" Content="9">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FFEA6E91"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="button10" Margin="3,3,3,3" Grid.Row="2" Grid.Column="20" Grid.ColumnSpan="2" FontSize="24" Content="0">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FFF0E110"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="button11" Margin="3,3,3,3" Grid.Row="2" Grid.Column="22" Grid.ColumnSpan="2" FontSize="24" Content="-" >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FF10F013"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="button12" Margin="3,3,3,3" Grid.Row="2" Grid.Column="24" Grid.ColumnSpan="2" FontSize="24" Content="=" >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FF10F013"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button  Margin="3,3,3,3" Grid.Row="2" Grid.Column="26" Grid.ColumnSpan="4" FontSize="24" Content="Backspace">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FF83837B"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button  Margin="3,3,3,3" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" FontSize="24" Content="Tab" >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FF83837B"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="button13" Margin="3,3,3,3" Grid.Row="3" Grid.Column="3" Grid.ColumnSpan="2" FontSize="24" Content="Q" Background="#FFEA6E91">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FFF0E110"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="button14" Margin="3,3,3,3" Grid.Row="3" Grid.Column="5" Grid.ColumnSpan="2" FontSize="24" Content="W">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FFF0E110"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="button15" Margin="3,3,3,3" Grid.Row="3" Grid.Column="7" Grid.ColumnSpan="2" FontSize="24" Content="E" >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FF10F013"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>


        <Button x:Name="button16" Margin="3,3,3,3" Grid.Row="3" Grid.Column="9" Grid.ColumnSpan="2" FontSize="24" Content="R" >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FF19C0E0"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="button17" Margin="3,3,3,3" Grid.Row="3" Grid.Column="11" Grid.ColumnSpan="2" FontSize="24" Content="T" >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background"  Value="#FF19C0E0"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="button18" Margin="3,3,3,3" Grid.Row="3" Grid.Column="13" Grid.ColumnSpan="2" FontSize="24" Content="Y"  >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background"  Value="#FFD710F0"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="button19" Margin="3,3,3,3" Grid.Row="3" Grid.Column="15" Grid.ColumnSpan="2" FontSize="24" Content="U" >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FFD710F0"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="button20" Margin="3,3,3,3" Grid.Row="3" Grid.Column="17" Grid.ColumnSpan="2" FontSize="24" Content="I" >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FFEA6E91"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="button21" Margin="3,3,3,3" Grid.Row="3" Grid.Column="19" Grid.ColumnSpan="2" FontSize="24" Content="O" >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FFF0E110"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>


        <Button x:Name="button22" Margin="3,3,3,3" Grid.Row="3" Grid.Column="21" Grid.ColumnSpan="2" FontSize="24" Content="P">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FF10F013"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="button23" Margin="3,3,3,3" Grid.Row="3" Grid.Column="23" Grid.ColumnSpan="2" FontSize="24" Content="[" >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FF10F013"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>


        <Button x:Name="button24" Margin="3,3,3,3" Grid.Row="3" Grid.Column="25" Grid.ColumnSpan="2" FontSize="24" Content="]" >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FF10F013"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="button25" Margin="3,3,3,3" Grid.Row="3" Grid.Column="27" Grid.ColumnSpan="3" FontSize="24" Content="\" >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FF10F013"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button Margin="3,3,3,3" Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="4" FontSize="24" Content="Caps lock" >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FF83837B"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="button26" Margin="3,3,3,3" Grid.Row="4" Grid.Column="4" Grid.ColumnSpan="2" FontSize="24" Content="A"  Background="#FFEA6E91">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FFF0E110"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="button27" Margin="3,3,3,3" Grid.Row="4" Grid.Column="6" Grid.ColumnSpan="2" FontSize="24" Content="S">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FFF0E110"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>



        <Button x:Name="button28" Margin="3,3,3,3" Grid.Row="4" Grid.Column="8" Grid.ColumnSpan="2" FontSize="24" Content="D" >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FF10F013"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="button29" Margin="3,3,3,3" Grid.Row="4" Grid.Column="10" Grid.ColumnSpan="2" FontSize="24" Content="F" >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FF19C0E0"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="button30" Margin="3,3,3,3" Grid.Row="4" Grid.Column="12" Grid.ColumnSpan="2" FontSize="24" Content="G" >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FF19C0E0"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="button31" Margin="3,3,3,3" Grid.Row="4" Grid.Column="14" Grid.ColumnSpan="2" FontSize="24" Content="H"  >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background"  Value="#FFD710F0"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="button32" Margin="3,3,3,3" Grid.Row="4" Grid.Column="16" Grid.ColumnSpan="2" FontSize="24" Content="J">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background"  Value="#FFD710F0"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="button33" Margin="3,3,3,3" Grid.Row="4" Grid.Column="18" Grid.ColumnSpan="2" FontSize="24" Content="K" >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FFEA6E91"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="button34" Margin="3,3,3,3" Grid.Row="4" Grid.Column="20" Grid.ColumnSpan="2" FontSize="24" Content="L">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FFF0E110"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="button35" Margin="3,3,3,3" Grid.Row="4" Grid.Column="22" Grid.ColumnSpan="2" FontSize="24" Content=";" >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FF10F013"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button Margin="3,3,3,3" Grid.Row="4" Grid.Column="24" Grid.ColumnSpan="2" FontSize="24" Content="'" >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FF10F013"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button Margin="3,3,3,3" Grid.Row="4" Grid.Column="26" Grid.ColumnSpan="4" FontSize="24" Content="Enter" >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FF83837B"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>




        <Button Margin="3,3,3,3" Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="5" FontSize="24" Content="Shift"  >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FF83837B"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="button36" Margin="3,3,3,3" Grid.Row="5" Grid.Column="5" Grid.ColumnSpan="2" FontSize="24" Content="Z"  Background="#FFEA6E91">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FFF0E110"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="button37" Margin="3,3,3,3" Grid.Row="5" Grid.Column="7" Grid.ColumnSpan="2" FontSize="24" Content="X">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FFF0E110"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="button38" Margin="3,3,3,3" Grid.Row="5" Grid.Column="9" Grid.ColumnSpan="2" FontSize="24" Content="C" >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FF10F013"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="button39" Margin="3,3,3,3" Grid.Row="5" Grid.Column="11" Grid.ColumnSpan="2" FontSize="24" Content="V" >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background"  Value="#FF19C0E0"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="button40" Margin="3,3,3,3" Grid.Row="5" Grid.Column="13" Grid.ColumnSpan="2" FontSize="24" Content="B" >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FF19C0E0"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="button41" Margin="3,3,3,3" Grid.Row="5" Grid.Column="15" Grid.ColumnSpan="2" FontSize="24" Content="N">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FFD710F0"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="button42" Margin="3,3,3,3" Grid.Row="5" Grid.Column="17" Grid.ColumnSpan="2" FontSize="24" Content="M" >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background"  Value="#FFD710F0"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="button43" Margin="3,3,3,3" Grid.Row="5" Grid.Column="19" Grid.ColumnSpan="2" FontSize="24" Content=","  >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FFEA6E91"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button  x:Name="button44" Margin="3,3,3,3" Grid.Row="5" Grid.Column="21" Grid.ColumnSpan="2" FontSize="24" Content=".">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FFF0E110"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="button45" Margin="3,3,3,3" Grid.Row="5" Grid.Column="23" Grid.ColumnSpan="2" FontSize="24" Content="/" >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FF10F013"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button Margin="3,3,3,3" Grid.Row="5" Grid.Column="25" Grid.ColumnSpan="5" FontSize="24" Content="Shift" >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FF83837B"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button Margin="3,3,3,3" Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="3" FontSize="24" Content="Ctrl" >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FF83837B"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button Margin="3,3,3,3" Grid.Row="6" Grid.Column="3" Grid.ColumnSpan="3" FontSize="24" Content="Win"  >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FF83837B"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button Margin="3,3,3,3" Grid.Row="6" Grid.Column="6" Grid.ColumnSpan="3" FontSize="24" Content="Alt" >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FF83837B"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button  Margin="3,3,3,3" Grid.Row="6" Grid.Column="9" Grid.ColumnSpan="12" Content="Space" FontSize="24" >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FF83837B"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button Margin="3,3,3,3" Grid.Row="6" Grid.Column="21" Grid.ColumnSpan="3" FontSize="24" Content="Alt" >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FF83837B"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button Margin="3,3,3,3" Grid.Row="6" Grid.Column="24" Grid.ColumnSpan="3" FontSize="24" Content="Win" >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FF83837B"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button Margin="3,3,3,3" Grid.Row="6" Grid.Column="27" Grid.ColumnSpan="3" FontSize="24" Content="Ctrl"  >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#FF83837B"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Убираем границу, чтобы сохранить вид кнопки с закругленными краями -->
                    <Setter Property="Padding" Value="10,5"/>
                    <!-- Задаем внутренний отступ для текста -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                    <!-- Здесь CornerRadius задает закругление краев -->
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
    </Grid>
</Window>

